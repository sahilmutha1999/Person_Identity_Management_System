/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.University;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sahil
 */
public class ProfessorViewAllStudents extends javax.swing.JPanel {

    /**
     * Creates new form TeacherViewAllStudents
     */
    public ProfessorViewAllStudents() {
        initComponents();
        dropDownCourseName();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        kGradientPanel1 = new keeptoo.KGradientPanel();
        jLabel3 = new javax.swing.JLabel();
        dropdownCourse = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblViewAllStudent = new javax.swing.JTable();

        kGradientPanel1.setkStartColor(new java.awt.Color(102, 204, 255));
        kGradientPanel1.setOpaque(false);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Select Course");

        dropdownCourse.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        dropdownCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropdownCourseActionPerformed(evt);
            }
        });

        tblViewAllStudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student Name", "Student Email-Id", "Student Score"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblViewAllStudent);

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGap(523, 523, 523)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(dropdownCourse, 0, 152, Short.MAX_VALUE)
                .addGap(547, 547, 547))
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGap(158, 158, 158)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1055, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dropdownCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(393, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 988, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void dropdownCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropdownCourseActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_dropdownCourseActionPerformed
    
    private void dropDownCourseName() {
//        dropdownCourse.addItem("Select");
//        for (TeacherMyCourses teacherIndividualCourses : teachermycoursesarray.getTeacherMyCoursesArray()) {
//            if(teacherIndividualCourses.getTeacherUsername().equals(teacherusername)){
//                dropdownCourse.addItem(teacherIndividualCourses.getCourseName());
//            }
//            
//        }
    }
    
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblViewAllStudent.getModel();
        model.setRowCount(0);
        
//        System.out.println("___________________________________");
//        System.out.println("Inside populate table");
//        for(StudentCourses studentcourses: studentcoursesarray.getStudentCoursesArray()){
////            String dropdowncourseselected = dropdownCourse.getSelectedItem().toString();
//            System.out.println("Inside for loop");
//            System.out.println("TeacherUsername for this course - "+studentcourses.getTeacherUsername());
//            System.out.println("This teacher username - " + teacherusername);
//            System.out.println("___________________________________");
//            if(studentcourses.getTeacherUsername().equals(teacherusername)
//                    && dropdownCourse.getSelectedItem().equals(studentcourses.getCourseName())){
//                System.out.println("Inside If loop");
//                for(StudentProfile studentprofile: studentprofilearray.getStudentProfileArray()){
//                    System.out.println("Inside for loop2");
//                    if(studentcourses.getStudentUsername().equals(studentprofile.getStudentUsername())){
//                        System.out.println("Inside if loop2");
//                        
//                        Object[] row = new Object[3];
//                        row[0] = studentprofile.getStudentName();
//                        row[1] = studentprofile.getStudentEmailId();
//                        row[2] = studentcourses.getCourseScore();
//                        
//                        model.addRow(row);
//                    }
//                }
//            }
//        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> dropdownCourse;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JTable tblViewAllStudent;
    // End of variables declaration//GEN-END:variables

    
}
